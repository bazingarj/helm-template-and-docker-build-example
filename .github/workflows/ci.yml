on:
  pull_request:
    branches:
      - main
    types: [closed]
jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Fetch Build version
        run: export TAG=$(grep "appVersion" ./helm-chart/Chart.yaml | awk '{ print $2 }')

      - name: Create git Tag
        uses: Klemensas/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        version: "${{ TAG }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.ECR_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update version in argocd
        run: curl -XPOST https://{{ $ARGOCD_DOMAIN }}/api/v1/applications/nginx-app/sync -d '{ "dryRun": false, "name": "nginx",  "prune": true,  "resources": [ {  "kind": "deployment", "name": "nginx", "namespace": "staging" }] }'
